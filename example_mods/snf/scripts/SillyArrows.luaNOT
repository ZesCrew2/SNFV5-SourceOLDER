--[[
    Version: 1.1.0
    Author: Ralsi (https://gamebanana.com/members/1939328)
    GB Page: https://gamebanana.com/tools/12247
    Crediting: If used in a mod, not necessary, but very much appreciated. Do not remove or edit all this info tho.
--]]


-- [[ CHANGEABLE VARIABLES ]] --

Active = true
-- key hits instead of note hits
UseKeys = true
IgnoreHeldNotes = false
-- the scale to add to the notes
ForceX = .1
ForceY = -.1

Player = true
Opponent = true

SmoothingSpeed = 8

InitialScaleMult = .9



-- [[ CODE ]] --

local keysCount = 4
local p = { x = {}, y = {}, i = {} }
local o = { x = {}, y = {}, i = {} }
local dirs = {
    [1] = 'note_left',
    [2] = 'note_down',
    [3] = 'note_up',
    [4] = 'note_right'
}

local function lerp(s, e, t)
    return (1 - t) * s + t * e;
end

function onCreatePost()
    addHaxeLibrary('Lua_helper', 'llua')
    runHaxeCode([[
        for (script in game.luaArray) {
            Lua_helper.add_callback(script.lua, "keyboardPressedAnyList", function(keys:Array<FlxKey>) {
                return FlxG.keys.anyPressed(keys);
            });
        }
    ]])
    local maniaShit = getPropertyFromClass('PlayState', 'SONG.mania')
    if type(maniaShit) ~= 'number' then maniaShit = tonumber(maniaShit) end
    if maniaShit and maniaShit ~= 3 then
        keysCount = maniaShit + 1
        local pussy = {
            [1] = 'one',
            [2] = 'two',
            [3] = 'three',
            [5] = 'five',
            [6] = 'six',
            [7] = 'seven',
            [8] = 'eight',
            [9] = 'ten',
            [10] = 'elev',
            [12] = 'twel',
            [13] = 'thir',
            [14] = 'fourt',
            [15] = '15',
            [16] = '16',
            [17] = '17',
            [18] = '18'
        }
        local grahhh = 'note_' .. pussy[keysCount]
        for i = 1, keysCount do
            local stupidKeys = runHaxeCode('return ClientPrefs.keyBinds.get("' .. grahhh .. i .. '");')
            dirs[i] = stupidKeys[2] ~= -1 and stupidKeys or { stupidKeys[1] }
        end
    else
        for i, v in ipairs(dirs) do
            local stupidKeys = runHaxeCode('return ClientPrefs.keyBinds.get("' .. v .. '");')
            dirs[i] = stupidKeys[2] ~= -1 and stupidKeys or { stupidKeys[1] }
        end
    end

    for i = 1, keysCount do
        p.x[i] = 0
        p.y[i] = 0
        p.i[i] = getPropertyFromGroup('playerStrums', i - 1, 'scale.y')
        o.x[i] = 0
        o.y[i] = 0
        o.i[i] = getPropertyFromGroup('opponentStrums', i - 1, 'scale.y')
    end

    if botPlay then UseKeys = false end
    if getPropertyFromClass('PlayState', 'isPixelStage') then
        ForceX = ForceX * 8
        ForceY = ForceY * 8
    end
end

function goodNoteHit(membersIndex, noteData, noteType, isSustainNote)
    if not Active or not Player or UseKeys or (isSustainNote and IgnoreHeldNotes) then return end
    p.y[noteData + 1] = ForceY * 2
    p.x[noteData + 1] = ForceX * 2
end

function opponentNoteHit(membersIndex, noteData, noteType, isSustainNote)
    if not Active or not Opponent or (isSustainNote and IgnoreHeldNotes) then return end
    o.y[noteData + 1] = ForceY * 2
    o.x[noteData + 1] = ForceX * 2
end

function onUpdatePost(delta)
    if not Active then return end
    if UseKeys then
        for i, v in ipairs(dirs) do
            if keyboardPressedAnyList(v) then
                p.x[i] = ForceX
                p.y[i] = ForceY
            end
        end
    end
    for i = 1, keysCount do
        if Player then
            local x, y, scale = p.x[i], p.y[i], p.i[i]
            p.x[i] = lerp(x, 0, delta * SmoothingSpeed)
            p.y[i] = lerp(y, 0, delta * SmoothingSpeed)
            setPropertyFromGroup('playerStrums', i - 1, 'scale.x', scale * InitialScaleMult + p.x[i])
            setPropertyFromGroup('playerStrums', i - 1, 'scale.y', scale * InitialScaleMult + p.y[i])
        end
        if Opponent then
            local x, y, scale = o.x[i], o.y[i], o.i[i]
            o.x[i] = lerp(x, 0, delta * SmoothingSpeed)
            o.y[i] = lerp(y, 0, delta * SmoothingSpeed)
            setPropertyFromGroup('opponentStrums', i - 1, 'scale.x', scale * InitialScaleMult + o.x[i])
            setPropertyFromGroup('opponentStrums', i - 1, 'scale.y', scale * InitialScaleMult + o.y[i])
        end
    end
end
